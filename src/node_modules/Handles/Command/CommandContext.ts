import * as Discord from 'discord.js'

export default class CommandContext {
    server: Discord.Guild
    message: Discord.Message
    channel: Discord.TextChannel | Discord.DMChannel | Discord.GroupDMChannel
    reactions: Discord.Collection<string, Discord.MessageReaction>
    executor: Discord.User

    /**
     * Constructor of the CommandContext class.
     *
     * @classdesc The command context
     */
    constructor(message: Discord.Message) {
        this.server = message.guild
        this.channel = message.channel
        this.message = message
        this.reactions = message.reactions
        this.executor = message.author
    }

    reply(content?: any, options?: Discord.MessageOptions | Discord.RichEmbed | Discord.Attachment) {
        if (typeof this.channel !== 'undefined')
            return this.channel.send(content, options)
        else
            return this.executor.send(content, options)
    }

    replyError(type: string = '', title: string = '', desc: string = '') {
        switch (type) {
            case 'badArgs':
                title = '/errors/badArgs'
                desc = '/errors/learnCMD'
                break
            case 'custom':
                break
            default:
                title = '/errors/unknownErr'
                desc = '/errors/basicError'
                break
        }

        let embed = new Discord.RichEmbed()
            .setColor('#cc0000')
            .setFooter(app.translate('/misc/requestedBy', this.server.id, { user: this.executor.tag }), this.executor.displayAvatarURL)

        if (type === 'custom') embed.addField(title, desc)
        else embed.addField(app.translate(title, this.server.id), app.translate(desc, this.server.id))

        this.reply('', embed)
    }
}
