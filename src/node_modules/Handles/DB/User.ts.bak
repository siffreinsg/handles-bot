import { GuildMember } from 'discord.js'

export default class UserDB {
    private user: GuildMember
    private userData: any
    xp: number
    msgSent: number
    cmdExed: number
    balance: number

    /**
     * Hydrate the class with user data 
     * @param {Discord.GuildMember} user The user to  
     */
    constructor(user: GuildMember) {
        this.user = user
        this.userData = app.db.getUser(user.guild.id, user.id)
        this.xp = this.userData.get('xp', 0).value()
        this.msgSent = this.userData.get('msgSent', 0).value()
        this.cmdExed = this.userData.get('cmdExed', 0).value()
        this.balance = this.userData.get('balance', 0).value()
    }

    incrementMsgSent(quantity: number = 1) {
        this.userData.set('msgSent', this.msgSent + quantity).write()
        this.msgSent = this.userData.get('msgSent', 0).value()
        return this.msgSent
    }

    incrementCmdExed(quantity: number = 1) {
        this.userData.set('cmdExed', this.cmdExed + quantity).write()
        this.cmdExed = this.userData.get('cmdExed', 0).value()
        return this.cmdExed
    }

    /**
     * Give xp to the user
     * @param {number} quantity The quantity of xp to give to the user 
     */
    incrementXp(quantity: number) {
        this.userData.set('xp', this.xp + quantity).write()
        this.xp = this.userData.get('xp', 0).value()
        return this.xp
    }

    /**
     * Give money to the user
     * @param {number} quantity The quantity of money to give to the user 
     */
    incrementBalance(quantity: number) {
        this.userData.set('balance', this.balance + quantity).write()
        this.balance = this.userData.get('balance', 0).value()
        return this.balance
    }
}
