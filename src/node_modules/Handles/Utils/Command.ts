import * as fs from 'fs'
import * as path from 'path'
import * as Discord from 'discord.js'
import Arguments from 'Handles/Utils/Arguments'
import Context from 'Handles/Command/CommandContext'

/**
 * Execute an command.
 * 
 * @param message Discord Message object of command
 * @param commandName Command name
 * @param args Arguments of command
 */
export function execute(message: Discord.Message, commandName: string, args: any) {
    commandName = commandName.toLowerCase()
    if (commandName !== '') {
        if (app.commands.list.indexOf(commandName) !== -1) {
            let cmd = app.commands.cmds[commandName],
                givedArgs = new Arguments(args),
                argsValid = true,
                permsValid = false,
                dmValid = true

            if (/*!cmd.allowDM && */['dm', 'group'].indexOf(message.channel.type) !== -1) dmValid = false

            cmd.args.forEach((arg, index) => {
                if (!givedArgs.get(index) && arg.required) argsValid = false
            })

            if (cmd.permissions.length > 0 && !message.member.hasPermission('MANAGE_ROLES', true, true) && app.config.superadmins.indexOf(message.author.id) === -1) {
                cmd.permissions.forEach(perm => {
                    if (perm !== 'SUPER_ADMIN') {
                        if (message.member.hasPermission(perm, true, true)) permsValid = true
                    }
                })
            } else {
                if (cmd.permissions.indexOf('SUPER_ADMIN') !== -1 && app.config.superadmins.indexOf(message.author.id) !== -1) {
                    permsValid = true
                } else if (cmd.permissions.indexOf('SUPER_ADMIN') === -1) {
                    permsValid = true
                }
            }
            if (argsValid && permsValid && dmValid) return app.commands.cmds[commandName].execute(new Context(message), givedArgs)
            else {
                if (!dmValid) {
                    let embed = new Discord.RichEmbed()
                        .setColor('#cc0000')
                        .setFooter(app.translate('/misc/requestedBy', message.guild.id, { user: message.author.tag }), message.author.displayAvatarURL)
                        .addField(app.translate('/errors/noDmError', message.guild.id), app.translate('/errors/noDm', message.guild.id))
                    message.channel.send('', embed)
                } else if (!permsValid) {
                    let embed = new Discord.RichEmbed()
                        .setColor('#cc0000')
                        .setFooter(app.translate('/misc/requestedBy', message.guild.id, { user: message.author.tag }), message.author.displayAvatarURL)
                        .addField(app.translate('/errors/noPermError', message.guild.id), app.translate('/errors/noPerm', message.guild.id))
                    message.channel.send('', embed)
                } else if (!argsValid) {
                    let embed = new Discord.RichEmbed()
                        .setColor('#cc0000')
                        .setFooter(app.translate('/misc/requestedBy', message.guild.id, { user: message.author.tag }), message.author.displayAvatarURL)
                        .addField(app.translate('/errors/badArgs', message.guild.id), app.translate('/errors/learnCMD', message.guild.id))
                    message.channel.send('', embed)
                }
            }
        } else {
            return 'notfound'
        }
    }
}
